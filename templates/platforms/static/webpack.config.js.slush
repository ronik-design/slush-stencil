var Webpack = require('webpack'),
    Path = require('path');

var BUILD_DIR = '<%= buildDir %>';

var ENTRY = [
    <% if (jsFramework === 'react') { %>
    'webpack-dev-server/client?http://127.0.0.1:8080',
    'webpack/hot/only-dev-server',
    <% } %>
    './scripts/main'
];

var PROVIDE_PLUGINS = {
    <% if (jsFramework === 'simple') { %>
    $: 'jquery',
    _: 'lodash'
    <% } %>
    <% if (jsFramework === 'backbone') { %>
    $: 'jquery',
    _: 'lodash',
    Backbone: 'backbone'
    <% } %>
};

var PLUGINS = [
    <% if (jsFramework === 'react') { %>
    new Webpack.HotModuleReplacementPlugin(),
    new Webpack.NoErrorsPlugin(),
    <% } %>
    new Webpack.DefinePlugin({
        '__DEV__': true
    }),
    new Webpack.ProvidePlugin(PROVIDE_PLUGINS)
];

var LOADERS = [{
    test: /\.css$/,
    loaders: ['style', 'css']
}, {
    test: /scripts\/vendor\/.+\.js$/,
    loaders: ['imports?this=>window']
}, {
    test: /\.jsx?$/,
    exclude: /node_modules|scripts\/vendor/,
    loaders: [
        <% if (jsFramework === 'react') { %>
        'react-hot',
        <% } %>
        'babel?experimental&optional=runtime'
    ]
}];

module.exports = {
    entry: ENTRY,

    output: {
        filename: 'main.js',
        path: Path.resolve(BUILD_DIR, 'javascript'),
        publicPath: '/javascript/'
    },

    cache: true,
    debug: true,
    devtool: 'eval',

    stats: {
        colors: true,
        reasons: true
    },

    plugins: PLUGINS,

    externals: {
        xmlhttprequest: 'xmlhttprequest',
        localStorage: 'localStorage'
    },

    resolve: {
        alias: {
            'main.css': Path.resolve(BUILD_DIR, 'css/main.css')
        },
        extensions: ['', '.js', '.jsx']
    },

    module: {
        loaders: LOADERS
    }
};
